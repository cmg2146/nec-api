"""Initial Create

Revision ID: 4da18ac1047e
Revises:
Create Date: 2023-02-28 23:17:28.979604

"""
from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geometry
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4da18ac1047e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('asset_type',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('original_icon_filename', sa.String(length=255), nullable=True),
    sa.Column('stored_icon_filename', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_geospatial_table('site',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('coordinates', Geometry(geometry_type='POINT', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('parent_site_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_site_id'], ['site.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_geospatial_index('idx_site_coordinates', 'site', ['coordinates'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index(op.f('ix_site_parent_site_id'), 'site', ['parent_site_id'], unique=False)
    op.create_table('asset_property_name',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('asset_type_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['asset_type_id'], ['asset_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_asset_property_name_asset_type_id'), 'asset_property_name', ['asset_type_id'], unique=False)
    op.create_table('survey',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('is_latest', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('site_id', 'is_latest')
    )
    op.create_index(op.f('ix_survey_site_id'), 'survey', ['site_id'], unique=False)
    op.create_geospatial_table('asset',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('coordinates', Geometry(geometry_type='POINT', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('asset_type_id', sa.Integer(), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['asset_type_id'], ['asset_type.id'], ),
    sa.ForeignKeyConstraint(['survey_id'], ['survey.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_geospatial_index('idx_asset_coordinates', 'asset', ['coordinates'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index(op.f('ix_asset_asset_type_id'), 'asset', ['asset_type_id'], unique=False)
    op.create_index(op.f('ix_asset_survey_id'), 'asset', ['survey_id'], unique=False)
    op.create_index('ix_asset_survey_id_level', 'asset', ['survey_id', 'level'], unique=False)
    op.create_geospatial_table('overlay',
    sa.Column('original_filename', sa.String(), nullable=True),
    sa.Column('stored_filename', sa.String(), nullable=True),
    sa.Column('extent', Geometry(geometry_type='POLYGON', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['survey_id'], ['survey.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_geospatial_index('idx_overlay_extent', 'overlay', ['extent'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index(op.f('ix_overlay_survey_id'), 'overlay', ['survey_id'], unique=False)
    op.create_index('ix_overlay_survey_id_level', 'overlay', ['survey_id', 'level'], unique=False)
    op.create_geospatial_table('pano',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('coordinates', Geometry(geometry_type='POINT', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('heading', sa.Float(), nullable=True),
    sa.Column('is_cubic_pano', sa.Boolean(), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('stored_filename', sa.String(length=255), nullable=True),
    sa.Column('custom_marker', sa.String(length=100), nullable=True),
    sa.Column('survey_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['survey_id'], ['survey.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_geospatial_index('idx_pano_coordinates', 'pano', ['coordinates'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index(op.f('ix_pano_survey_id'), 'pano', ['survey_id'], unique=False)
    op.create_index('ix_pano_survey_id_level', 'pano', ['survey_id', 'level'], unique=False)
    op.create_geospatial_table('photo',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('coordinates', Geometry(geometry_type='POINT', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('heading', sa.Float(), nullable=True),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('stored_filename', sa.String(length=255), nullable=True),
    sa.Column('custom_marker', sa.String(length=100), nullable=True),
    sa.Column('survey_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['survey_id'], ['survey.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_geospatial_index('idx_photo_coordinates', 'photo', ['coordinates'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index(op.f('ix_photo_survey_id'), 'photo', ['survey_id'], unique=False)
    op.create_index('ix_photo_survey_id_level', 'photo', ['survey_id', 'level'], unique=False)
    op.create_table('asset_property',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_asset_property_asset_id'), 'asset_property', ['asset_id'], unique=False)
    op.create_table('hotspot',
    sa.Column('pano_id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=True),
    sa.Column('destination_pano_id', sa.Integer(), nullable=True),
    sa.Column('yaw', sa.Float(), nullable=False),
    sa.Column('pitch', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], ),
    sa.ForeignKeyConstraint(['destination_pano_id'], ['pano.id'], ),
    sa.ForeignKeyConstraint(['pano_id'], ['pano.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hotspot_asset_id'), 'hotspot', ['asset_id'], unique=False)
    op.create_index(op.f('ix_hotspot_destination_pano_id'), 'hotspot', ['destination_pano_id'], unique=False)
    op.create_index(op.f('ix_hotspot_pano_id'), 'hotspot', ['pano_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_hotspot_pano_id'), table_name='hotspot')
    op.drop_index(op.f('ix_hotspot_destination_pano_id'), table_name='hotspot')
    op.drop_index(op.f('ix_hotspot_asset_id'), table_name='hotspot')
    op.drop_table('hotspot')
    op.drop_index(op.f('ix_asset_property_asset_id'), table_name='asset_property')
    op.drop_table('asset_property')
    op.drop_index('ix_photo_survey_id_level', table_name='photo')
    op.drop_index(op.f('ix_photo_survey_id'), table_name='photo')
    op.drop_geospatial_index('idx_photo_coordinates', table_name='photo', postgresql_using='gist', column_name='coordinates')
    op.drop_geospatial_table('photo')
    op.drop_index('ix_pano_survey_id_level', table_name='pano')
    op.drop_index(op.f('ix_pano_survey_id'), table_name='pano')
    op.drop_geospatial_index('idx_pano_coordinates', table_name='pano', postgresql_using='gist', column_name='coordinates')
    op.drop_geospatial_table('pano')
    op.drop_index('ix_overlay_survey_id_level', table_name='overlay')
    op.drop_index(op.f('ix_overlay_survey_id'), table_name='overlay')
    op.drop_geospatial_index('idx_overlay_extent', table_name='overlay', postgresql_using='gist', column_name='extent')
    op.drop_geospatial_table('overlay')
    op.drop_index('ix_asset_survey_id_level', table_name='asset')
    op.drop_index(op.f('ix_asset_survey_id'), table_name='asset')
    op.drop_index(op.f('ix_asset_asset_type_id'), table_name='asset')
    op.drop_geospatial_index('idx_asset_coordinates', table_name='asset', postgresql_using='gist', column_name='coordinates')
    op.drop_geospatial_table('asset')
    op.drop_index(op.f('ix_survey_site_id'), table_name='survey')
    op.drop_table('survey')
    op.drop_index(op.f('ix_asset_property_name_asset_type_id'), table_name='asset_property_name')
    op.drop_table('asset_property_name')
    op.drop_index(op.f('ix_site_parent_site_id'), table_name='site')
    op.drop_geospatial_index('idx_site_coordinates', table_name='site', postgresql_using='gist', column_name='coordinates')
    op.drop_geospatial_table('site')
    op.drop_table('asset_type')
    # ### end Alembic commands ###
